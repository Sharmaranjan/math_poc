// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: math.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_math_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_math_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_math_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_math_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_math_2eproto;
class MathClientRequest;
struct MathClientRequestDefaultTypeInternal;
extern MathClientRequestDefaultTypeInternal _MathClientRequest_default_instance_;
class MathServerReply;
struct MathServerReplyDefaultTypeInternal;
extern MathServerReplyDefaultTypeInternal _MathServerReply_default_instance_;
class MathServerRequest;
struct MathServerRequestDefaultTypeInternal;
extern MathServerRequestDefaultTypeInternal _MathServerRequest_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::MathClientRequest* Arena::CreateMaybeMessage<::MathClientRequest>(Arena*);
template<> ::MathServerReply* Arena::CreateMaybeMessage<::MathServerReply>(Arena*);
template<> ::MathServerRequest* Arena::CreateMaybeMessage<::MathServerRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MathClientRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MathClientRequest) */ {
 public:
  inline MathClientRequest() : MathClientRequest(nullptr) {}
  ~MathClientRequest() override;
  explicit PROTOBUF_CONSTEXPR MathClientRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MathClientRequest(const MathClientRequest& from);
  MathClientRequest(MathClientRequest&& from) noexcept
    : MathClientRequest() {
    *this = ::std::move(from);
  }

  inline MathClientRequest& operator=(const MathClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MathClientRequest& operator=(MathClientRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MathClientRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MathClientRequest* internal_default_instance() {
    return reinterpret_cast<const MathClientRequest*>(
               &_MathClientRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MathClientRequest& a, MathClientRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MathClientRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MathClientRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MathClientRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MathClientRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MathClientRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MathClientRequest& from) {
    MathClientRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MathClientRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MathClientRequest";
  }
  protected:
  explicit MathClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:MathClientRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_math_2eproto;
};
// -------------------------------------------------------------------

class MathServerRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MathServerRequest) */ {
 public:
  inline MathServerRequest() : MathServerRequest(nullptr) {}
  ~MathServerRequest() override;
  explicit PROTOBUF_CONSTEXPR MathServerRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MathServerRequest(const MathServerRequest& from);
  MathServerRequest(MathServerRequest&& from) noexcept
    : MathServerRequest() {
    *this = ::std::move(from);
  }

  inline MathServerRequest& operator=(const MathServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MathServerRequest& operator=(MathServerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MathServerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MathServerRequest* internal_default_instance() {
    return reinterpret_cast<const MathServerRequest*>(
               &_MathServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MathServerRequest& a, MathServerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MathServerRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MathServerRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MathServerRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MathServerRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MathServerRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MathServerRequest& from) {
    MathServerRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MathServerRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MathServerRequest";
  }
  protected:
  explicit MathServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:MathServerRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_math_2eproto;
};
// -------------------------------------------------------------------

class MathServerReply final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MathServerReply) */ {
 public:
  inline MathServerReply() : MathServerReply(nullptr) {}
  ~MathServerReply() override;
  explicit PROTOBUF_CONSTEXPR MathServerReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MathServerReply(const MathServerReply& from);
  MathServerReply(MathServerReply&& from) noexcept
    : MathServerReply() {
    *this = ::std::move(from);
  }

  inline MathServerReply& operator=(const MathServerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline MathServerReply& operator=(MathServerReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MathServerReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const MathServerReply* internal_default_instance() {
    return reinterpret_cast<const MathServerReply*>(
               &_MathServerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MathServerReply& a, MathServerReply& b) {
    a.Swap(&b);
  }
  inline void Swap(MathServerReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MathServerReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MathServerReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MathServerReply>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MathServerReply& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MathServerReply& from) {
    MathServerReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MathServerReply* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MathServerReply";
  }
  protected:
  explicit MathServerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // float message = 1;
  void clear_message();
  float message() const;
  void set_message(float value);
  private:
  float _internal_message() const;
  void _internal_set_message(float value);
  public:

  // @@protoc_insertion_point(class_scope:MathServerReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float message_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_math_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MathClientRequest

// int32 x = 1;
inline void MathClientRequest::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MathClientRequest::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MathClientRequest::x() const {
  // @@protoc_insertion_point(field_get:MathClientRequest.x)
  return _internal_x();
}
inline void MathClientRequest::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MathClientRequest::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:MathClientRequest.x)
}

// -------------------------------------------------------------------

// MathServerRequest

// float x = 1;
inline void MathServerRequest::clear_x() {
  _impl_.x_ = 0;
}
inline float MathServerRequest::_internal_x() const {
  return _impl_.x_;
}
inline float MathServerRequest::x() const {
  // @@protoc_insertion_point(field_get:MathServerRequest.x)
  return _internal_x();
}
inline void MathServerRequest::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void MathServerRequest::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:MathServerRequest.x)
}

// float y = 2;
inline void MathServerRequest::clear_y() {
  _impl_.y_ = 0;
}
inline float MathServerRequest::_internal_y() const {
  return _impl_.y_;
}
inline float MathServerRequest::y() const {
  // @@protoc_insertion_point(field_get:MathServerRequest.y)
  return _internal_y();
}
inline void MathServerRequest::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void MathServerRequest::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:MathServerRequest.y)
}

// -------------------------------------------------------------------

// MathServerReply

// float message = 1;
inline void MathServerReply::clear_message() {
  _impl_.message_ = 0;
}
inline float MathServerReply::_internal_message() const {
  return _impl_.message_;
}
inline float MathServerReply::message() const {
  // @@protoc_insertion_point(field_get:MathServerReply.message)
  return _internal_message();
}
inline void MathServerReply::_internal_set_message(float value) {
  
  _impl_.message_ = value;
}
inline void MathServerReply::set_message(float value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:MathServerReply.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_math_2eproto
